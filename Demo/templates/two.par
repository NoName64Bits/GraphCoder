		}

		public class Plotter
		{
		static DataTable dt;

		public static float Evaluate(string ex, int x, int y){
			if(dt != null){
				dt = new DataTable();
			}
			string s;
			s = ex.Replace("x", x.ToString());
			s = s.Replace("y", y.ToString());
			var v = dt.Compute(s, "");
			return (float)(v);
		}

		public static void PlotFunction(Color cl, Func<float, float, float> F1, Graphics gr,
			float xmin, float ymin, float xmax, float ymax,
			float dx, float dy)
		{
			using (Pen thin_pen = new Pen(cl, 0))
			{
				for (float x = xmin; x <= xmax; x += dx)
				{
					float last_y = F1(x, ymin);
					for (float y = ymin + dy; y <= ymax; y += dy)
					{
						float next_y = F1(x, y);
						if (
							((last_y <= 0f) && (next_y >= 0f)) ||
							((last_y >= 0f) && (next_y <= 0f))
						   )
						{
							gr.DrawLine(thin_pen, x, y - dy, x, y);
						}
						last_y = next_y;
					}
				}

				for (float y = ymin + dy; y <= ymax; y += dy)
				{
					float last_x = F1(xmin, y);
					for (float x = xmin + dx; x <= xmax; x += dx)
					{
						float next_x = F1(x, y);
						if (
							((last_x <= 0f) && (next_x >= 0f)) ||
							((last_x >= 0f) && (next_x <= 0f))
						   )
						{
							gr.DrawLine(thin_pen, x - dx, y, x, y);
						}
						last_x = next_x;
					}
				}
			}
		}
	}
}
